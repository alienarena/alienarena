Alien Arena for Linux on Desura
===============================

Copyright (C) 2012 COR Entertainment, LLC.

== About this Document ==

WARNING: (2014-11) This is just a reformat of the original document
using AsciiDoc. Desura has had changes since this was written. So this
document is for reference and to preserve some previous (possibly
obsolete) knowledge. The 'alienarena' build and install notes are most
certainly obsolete.

This document is a reference for installing and maintaining Alien
Arena on the Desura digital distribution service, http://www.desura.com.

The source for this document uses AsciiDoc.  Briefly, AsciiDoc
is a frontend for a variety of XSL document programs and runs on
Linux.  Linux distributions have it in their package managers.
Running it on Windows apparently requires using Cygwin,
unfortunately.  In some ways, it is "DocBook-for-Dummies"
and is relatively easy to edit.

The home page for AsciiDoc is http://www.methods.co.nz/asciidoc/.

The SourceForge repository is http://sourceforge.net/projects/asciidoc/.

In the 'alienarena/docs/docsrc' directory this is the command used to
generate output.
......................................................
$ asciidoc -b html5 -a toc2  devref-desura-en.asciidoc
......................................................

== Support ==

Finding and deciphering the documentation for installing Desura,
installing games from Desura, and distributing games on Desura is
a bit of a chore. The adminstrators are helpful and respond
quickly, though.

The Linux-related forum is at:
http://www.desura.com/groups/desura/linux

There is a Wiki at: https://trac.moddb.com/app/wiki/ (It may not be
well-maintained, and could be out-of-date.) This document assumes the
initial setup for publication has been done. Only updating an existing
project is covered here.

== Overview ==

Desura requires a binary executable that runs in the user's home
directory.  The builds for 7.60.1 AND 7.65 were done using Ubuntu
12.04 LTS. Separate OS installations were used for x86 and x86_64.

NOTE: The new Steam Linux implementation is similar. Currently, Steam
officially supports only Ubuntu. Desura's solution to problem of
supporting different Linux OS's, is to load various versions of system
libraries into the user's home directory. Steam may do something
similar in the future.  This technique is probably not a good
thing. It does not conform to common Linux standards, but, more
importantly, it will probably be a gigantic headache for developers.

These are the major steps for installation on Desura:

. Create the system build environments.
. Create the build.
. Create the installation directory.
. Create documents customized for Desura.
. Verify the dependencies and install settings.
. Create and upload the MCF.
. Commit, get approval and test.
. Upload the release tarball.


== Create the System Environments ==

Updating Desura requires a Desura/IndieDB/ModDB account, of course,
and, also developer access rights. (Access rights management can be
accessed through the Alien Arena Publish page; under the Profile list,
click on Access Rights.)

There are 2 OS system environments; 32-bit Linux x86 and 64-bit Linux
x86-64.  One could use either one and cross-compile to the
other. However, for testing purposes and for uploading to Desura it
may be best to have separate installations.  Ideally, this does not
need to be done for every release. Once the system environments are in
operation, they may be used for later releases.

For 7.60, I chose to use Ubuntu 12.04 LTS and create a multi-boot
environment on Gentoo x86 using "legacy" GRUB. The Ubuntu partitions
are about 30G each on a second drive using Extended Partitions.  The
setup one uses, of course, is mostly a matter of taste. The following
is an example and some notes.

The Ubuntu installation is not particularly happy with this arrangement,
and it requires some magic.  When installing from a DVD, after
selecting "Try Ubuntu", in a terminal do:
...........................
$ ubiquity --no-bootloader
...........................
This prevents the installer,'ubiquity', from trying to create a boot
sector and install GRUB 2. The additions to 'grub.conf' look like
this:
.............................................
title=Ubuntu Linux x86 (3.2.0-xx-generic-pae)
root (hd1,4)
kernel /vmlinuz  root=/dev/sdb5
initrd /initrd.img

title=Ubuntu Linux x86_64 (3.2.0.xx-generic)
root (hd1,5)
kernel /vmlinuz root=/dev/sdb6
initrd /initrd.img
..............................................

And at the top level of the partitions, these soft links supply
references to the kernel boot files.

for x86:
...................................................
vmlinuz -> boot/vmlinuz-3.2.0-32-generic-pae
initrd.img -> /boot/initrd.img-3.2.0-32-generic-pae
...................................................

for x86-64:
...............................................
vmlinuz -> boot/vmlinuz-3.2.0-32-generic
initrd.img -> /boot/initrd.img-3.2.0-32-generic
...............................................

== Create the Build ==

The directory for the build is separate from the Desura installation
directory. Normally, it would be created by unpacking a release
tarball according to usual instructions.

For Linux, Desura installs into the users home directory, so the
'alternate install' configuration is used. The compiler options should
follow distro packaging practice for generating an executable to run
on different architectures. Distro's also use stack protection, which
is a good idea in this case.

.........................................................................................................
$ export CFLAGS='-O2 -mtune=generic -fstack-protector-all  --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2'

$ CXXFLAGS='-O2 -mtune=generic -fstack-protector-all --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2'

$ ./configure --enable-alternate-install
..........................................................................................................

To keep things simpler, the integrated libode should be used.
Other configure options that are probably preferred are:
 
.........................................................
--enable-maintainer-mode --disable-silent-rules
.........................................................

== Create the Installation Directory ==

For Desura, the installation directory is created separately.  This
may not be strictly necessary, but if the build directory were used a
lot of unnecessary files would be included.  (Just FYI, according to
documentation, Desura will filter out '.svn' subdirectories.)

The installation directory is normally, and officially, named
'alien-arena-2008'.  Other names may be used, but Desura will install
in the official directory on the user's system.

The contents of the installation directory are:

[horizontal]
alienarena:: The Linux binary.
README:: The Desura custom top-level readme file (see below)
arena/motd.txt:: The stock message-of-the-day file
botinfo/:: All the bot and nav files in the release
data1/:: All the game resource files in the release
docs/::  Documentation customized for Desura (see below)

The Linux dedicated server is not included on purpose.  It is assumed
that a user would download the full tarball, if there was an interest
in running that.


== Customize Documents for Desura ==

README:: A special README for Desura pointing to the other documents
in the doc subdirectory.  Has information about the compiler and
configuration used to generate the binary for Desura.

GAME_README.TXT:: This is the general 'readme.txt' Linux.  If that
file is modified, then this one should be updated.

TECH_README.TXT:: This is the top-level Unix/Linux README.  The changed name is the only
difference.

LICENSE.TXT:: This is the COR Entertainment, LLC. copyright and
license.  The same content as 'license.txt' reformatted for Linux.

GPL.TXT:: The GNU GENERAL PUBLIC LICENSE, Version 2.

LGPL.TXT::
ODE_LICENSE.TXT::
The GNU LESSER GENERAL PUBLIC LICENSE Version 2.1 and the Open
Dynamics Engine (ODE) License.  Included because the Desura binary
uses the integrated ODE version of the 'alienarena' build.


== Verify the Dependencies and Install Settings ==

If the program adds a shared library to its link, the install settings
may need updating. Otherwise, install settings do not usually need to
be modified. It is a good idea to verify the settings in any case.

Here is a menu sequence for getting to the Alien Arena Publish page:

* Play
* On the Toolbar line (after Games and Favorities), Development, Right
Click on AlienArena
* Tools
* Desura Page (tab name is "Publish")

Once on the Publish page, on the Releases list, click on Upload.
Then, click on the Full Linux, and Full Linux 64 branches and verify
that the Dependencies are correct.

The Install Settings, also on the Releases list, control the program
file paths and should not be changed.


== Create and Upload the MCF ==

The Managed Content File (MCF) is a Desura proprietary format used to
upload to the Desura Server. It is generated by Desura-supplied
procedures which calculate the difference between the current released
installation and the new version.

Initially, it can be confusing because the user-interface can be
mysterious.  The clickable links for the next step in the multi-step
process sometimes appear only after the current step is completed, so
it takes some "leaps of faith."  When there are no errors, the process
is easy. But when upload errors occur clearing the broken upload and
restarting does not always work.

Late in the process, a request for the changelog appears. It requires
changelog entries in a specific format. If possible, prepare this
beforehand.  Use the changelog for the Windows version, if it is
available.

Once the Installation Directory is ready, the MCF can be created and
uploaded.  Make sure the directory is clean with no extraneous
files. If the binary was built with debug symbols, they should be
stripped.

The Create MCF command can be accessed through Play Menu. Access like
the sequence above, click on Create MCF rather than Desura Page.
Enter the path to the installation directory and wait. On success,
click on Upload MCF and upload the newly created MCF.

These commands may also be accessed through the Alien Arena Publish
page. Select Upload in the Release list. Then scroll to the Upload
section at the bottom of the page.

If the upload fails, clearing the upload and starting over does not
always work. Consult the support resources for work-arounds.

== Commit the MCF, Get Approval, Test ==

Once the MCF is successfully uploaded, there will be a Submit for
Approval command on the Publish page.  Desura administrators usually
approve in a few days.

At that point, the <emphasis>test</emphasis> command is activated.
On a system with an existing installation, it will be updated with
changes.  In case this is not obvious: this is not the same as the
installation directory used to generate the MCF.  It will be found in the
<filename>desura/common</filename> directory in the user home directory.
It is probably a good idea to test a clean install, also.

== Upload the Release Tarball ==

Desura calls this the 'standalone'. The standalone upload page can be
accessed through the Upload section or by clicking on the existing
standalone package listing. The tarball download is listed as the
32-bit version; uploading a 64-bit labeled version would be redundant.
