.\" GNU/Linux/Unix README for Alien Arena 2011
.\" 2010-11-30. Revised: 2011-12-06
.\" Author: Jim Bower
.\" using groff for paragraph formatting.
.\" $ groff -T ascii README.groff >README
.ll 6.5i
.nh
.ad l
.in 0
.nr topic 0 1

.tl ''Alien Arena 2011''
.tl ''Version 7.53''

\n+[topic]. Scope

This document includes information about the GNU-Linux/Unix version of Alien Arena 2011.
Custom options and other information specific to Alien Arena are included here.

For general information, licensing, and contributers, see the README.txt and license.txt documents
(in the docs/ subdirectory in the distribution archive).

For generic information about installation, see the GNU INSTALL document.


\n+[topic]. Resources

The Alien Arena HomePage URL is:
.in +2m
http://red.planetarena.org/
.in
There are links there to the Alien Arena Forum and other helpful Internet resources.
The Alien Arena IRC channel is now served by:
.in +2m
irc.planetarena.org
.in
The in-game IRC connects to #alienarena there.

There is a Subversion (SVN) repository for Alien Arena.
See the topic "Getting Alien Arena from SVN" below.


\n+[topic]. Changes for version 7.53

The Autotools build uses autoconf 2.68, and automake 1.11.1.
The m4 macros are updated and configure.ac modified accordingly.
There are no major changes to the build procedure from earlier 7.5x versions.

Besides bug fixes, 7.53 has these additions and changes:

.nf
.in +2m
* TBD.
.in 0
.fi

See the section "Notes about Console Variables" below.
There are some new and changed "cvars".


\n+[topic]. Some previous version changes affecting build and install:

.nf
.in +2m
* The Open Dynamics Engine (ODE) is integrated with the main program;
  so libode is, optionally, not required. ODE is written in c++, so g++
  and libstdc++ are required to build and link the integrated ODE.
* A configure option to disable document installation was added.
* An installation path for the icon, icondir, was added and the icon 
  was renamed to alienarena.png.
* The server terminal may be configured to support color output.
* The dedicated server was renamed to crx-ded.
* The game.so shared library and LIBDIR variable were eliminated.
.in 0
.fi


\n+[topic]. Requirements

Alien Arena uses OpenGL for 3D graphics rendering.
Alien Arena can be played on many computers.
However, not all computers have 3D acceleration hardware and drivers with adequate performance for 3D game play.
While some systems may perform ok with open source drivers,
a proprietary driver, such as those from AMD/ATI and NVidia, is often needed.

Playing online may require firewall configuration.
Online performance will vary depending on the network connection between the client and the server.


\n+[topic]. Installation

If you are installing Alien Arena using your distribution's package manager, follow their instructions.
Distributions install the user's configuration in places other than the default "~/.codered" directory.
This is important if you want to create the "arena/autoexec.cfg" file to customize your settings.
Search for "arena/config.cfg" to find the configuration directory.

Two installation alternatives are PlayDeb and Desura.
If using those, follow their installation procedures.
PlayDeb is at http://www.playdeb.net/.
Desura is at http://www.desura.com/.

The version available with a distribution or the game distribution services may not be the latest.

If you are reading this, you may have already unpacked the distribution archive (aka, "tarball") into your HOME directory.
Otherwise, the terminal command line for unpacking the archive is:
.in +2m
.nf
$ tar -xzf alienarena-<some version numbers>.tar.gz
.in
.fi
Or, using the graphical file browser, right click on the file name, and left click on "Extract Here."
Then follow the instructions below to build the program.

If the installation fails, check the error message for required software packages that may be missing.
Alien Arena uses: X11, OpenGL, OpenAL 1.1, Ogg-Vorbis, cURL, FreeType2, and JPEG.
Some major distributions have "dev" versions of the libraries that are needed to build programs.
These are not installed by default, so you may need to install them using your distributions package manager.
Version 7.53 does not require the ODE library (it is integrated).
There is a configure option to use the system ODE library (see below.)

For Ubuntu and similar systems, see the topic, "Getting Required Packages with Synaptic", below.

For advanced configure options, see the topic, "Custom Configure Options", below.
It is not necessary, but it would be a good idea to take a look at those.

Using the terminal, change to the "alienarena-7.53" directory and enter these commands:
.nf
.in +2m
$ ./configure
$ make
$ sudo make install
.in
.fi

To run:
.in +2m
$ crx
.in

In the menu, Single Player will run a simple pre-configured local game.
For more single player options, go to the Host Server menu and set "public server" to no.
For multiplayer, online play, first enter your player name and a password in the Player Setup menu.
Then go to the Join Server menu to find a Server.
(Yes, we know the menu system needs updating and there are plans to do that.)

Command line options to crx are NOT standard.
There is NO "--help".
They follow a format inherited from Alien Arena's Quake 2 roots.
Command line options are the same as console commands using a '+' character prefix.
The details are beyond the scope of this document;
but a simple example is:
.nf
.in +2m
$ crx +set maxclients 10
.in
.fi

By default, 'sudo make install' will install the game programs and data like this:

.nf
.in +2m
/usr/local/
.in +2m
bin/
.in +2m
crx
crx-ded  (dedicated server)
.in
share/
.in +2m
alienarena/
.in +2m
arena/
botinfo/
data1/
.in
doc/
.in +2m
alienarena/
.in +2m
<various documents>
.in -4m
icons/
.in +2m
alienarena.png
.in 0
.fi

When the program is run, a directory is created in the user HOME directory.
Various kinds of data (config files, downloaded data, custom bot setups) are written there.
The default directory name is ".codered/".
That can be changed using an environment variable, COR_GAME.

For example:
.nf
.in +2m
$ export COR_GAME=/home/user/.alienarena
.in
.fi

Current settings are stored in ".codered/arena/config.cfg".
For custom settings, create a file, ".codered/arena/autoexec.cfg".
Details about settings are beyond the scope of this document.
Go to the websites, the forum and the IRC channel for more information.

Following installation, intermediate files generated by the build may be removed using:

.nf
.in +2m
$ make clean
.in
.fi

To uninstall the program and data that 'sudo make install' installed, run:

.nf
.in +2m
$ sudo make uninstall
.in
.fi

The uninstall procedure may not remove all files and directories.
Some manual removal may be required.


\n+[topic]. Getting Required Packages with Synaptic

Tools and packages required to build Alien Arena may not be installed.
For Ubuntu and similar systems, installing them is easy with the graphical Synaptic Package Manager.
Select the following packages.
Other packages that these depend on will be automatically selected for installation.
This list is based on Ubuntu 10.10.

.nf
.in +2m
build-essential
libx11-dev
libgl1-mesa-dev
libxxf86vm-dev
libxxf86dga-dev (optional)
libopenal-dev
libjpeg8-dev (or libjpeg62-dev)
libvorbis-dev
libcurl4-gnutls-dev
libode-dev (optional)
libfreetype6-dev
.in
.fi


\n+[topic]. Notes about Console Variables (cvars)

New or changed server cvars:
.nf
.in +2m
* sv_enforcetime - setting to 1 enables experimental
  speed hack detection.
* skill - for bot skill. setting to 3 forces all bots
  to skill level 3.
* insta_rockets - a game mode combination of Instagib
  and Rocket Arena.
.in 0
.fi

New or changed client cvars:
.nf
.in +2m
* gl_usevbo - enables the use of Vertex Buffer Objects
  for better performance.
.in 0
.fi

Alien Arena is based on Quake games.
Many of the cvars are the same as Quake 2.
More information can be found on the Forum and on the Web.


\n+[topic]. Troubleshooting Tips

When the game program exits, it stores settings in "config.cfg".
The default location for this file is "/home/<user>/.codered/arena/",
but it might be elsewhere depending on your distribution.
Sometimes it helps to delete config.cfg, and then re-enter menu settings.
For persistent storage of custom settings, create a file named "autoexec.cfg" in the same directory as "config.cfg".
Settings in "autoexec.cfg" will override settings in "config.cfg".

If the game does not run smoothly, graphics settings may need to be adjusted.
Also, a different or updated video driver may be needed.
Enable the video frame rate display in the "Game Options" menu by setting "display fps" to yes.
There are settings in both the "Game Options" and "Video Options" sections that affect performance.
The maximum frame rate is set with the console variable ("cvar"), "cl_maxfps".
Sometimes lowering that from the default "90" will help.
Get more information on the Forum, Websites, and IRC channel.

If you have errors that output messages about "ODE", setting the "ragdolls" option to off in the Game Options menu may help.

There are known sound problems related to PulseAudio and OpenAL with some versions of those sound drivers.
Check for for information on OpenAL configuration using "~/.alsoftrc" in your distributions shared doc directory.

If you have a high resolution mouse, you may need to set the mouse sensitivity cvar.
The cvar name is "sensitivity" and it may be set to fractional values between 0.0 and 1.0.
Use the console to determine the value, then put it in autoexec.cfg.

The mouse may behave badly (always pointing up, for instance).
This can usually be fixed by setting the console variable (cvar), "in_dgamouse", to zero.
Put this line into the "autoexec.cfg" file:
.nf
.in +2m
set in_dgamouse "0"
.in
.fi
Alternatively, when building the program, use this configure option:
.nf
.in +2m
--without-xf86dga
.in
.fi

For advanced users (if you do not know what this means, it is ok to ignore it):
Testing shows that some CFLAGS settings can give a little performance improvement.
Add CFLAGS="<put options here>" to the ./configure command.
Some to try, depending on system hardware are:
.nf
.in +2m
* -O3 (-O2 is the default)
* -march=core2 or -march=native
* -msse, -msse2, -msse3 or other sse options, and -mfpmath=sse
.in 0
.fi
If you modify CFLAGS, you probably also want the "--disable-silent-rules" configure option.


\n+[topic]. Custom Configure Options

Run './configure --help' for a list of options.
Note that many of the options are built-in and some are not meaningful or useful for Alien Arena.
Options are entered on the command line in the usual way; the help output has the details.
Refer to the GNU INSTALL document for general details.

To build the dedicated server only, use the following configure option:
.nf
.in +2m
--disable-client
.in
.fi

By default, configure produces a status message giving information on the configuration.
To hide that message, use:
.nf
.in +2m
--disable-build-status
.in
.fi

To rename the programs, use the standard configure option.
For example:
.nf
.in +2m
--program-transform-name='s/crx/alienarena/'
.in
.fi

To install to a different location, use the standard configure option.
For example:
.nf
.in +2m
--prefix=/usr/local/games
.in
.fi

To specify an installation location for the icon, use the following option.
.nf
.in +2m
--with-icondir=DIR
.in
.fi

To use the system-supplied libode, rather than the integrated ODE, use this option:
.nf
.in +2m
--with-system-libode
.in
.fi
Due to variations in the way libode may be built, this is may not work.
It may be preferable to use the system library, however, if it was built with
double precision math.
If 'pkg-config --cflags ode' returns -DdDOUBLE, it is probably safe to use the system library.
The integrated ODE is built using these compile options:
.nf
.in +2m
* -DdDOUBLE
* -DdTRIMESH_ENABLED
* -DdTRIMESH_OPCODE
* -DNDEBUG and -DdNODEBUG
.in
.fi
Using a libode built with -DdSINGLE makes ragdolls excessively "raggedy".
Other libode build variations will likely result in program failure.

To disable installation of documents, use the following option.
.nf
.in +2m
--disable-documents
.in
.fi

The server terminal will output color if the following option is used.
This converts Quake-style color codes to ANSI color escapes.
(It is not enabled by default because some terminal configurations may not support ANSI color escapes.)
.nf
.in +2m
--enable-ansi-color
.in
.fi

Other Alien Arena custom options are intended mostly for developer use.
If you use them, it is assumed that you know what you are doing.


\n+[topic]. Tools

Tools/fuse.tar.gz contains a game server browser.
See documents in that package for details.

Tools/LinuxScripts contains tools for server management.
See the README there for details.


\n+[topic]. Alternate Install

This configures the installation to use the "traditional", single directory, in-place install.
It does not define DATADIR, and the executables need to be in the top game directory.
Normally, this install would be done somewhere in your HOME directory.
Root privileges would not be required to write the game data.
The configure option for renaming of the executables is not supported.

If you are a map-builder, you should use this option.
Some mapping tools may not work with the "standard" install.

If you regularly update to the latest development code from the Subversion Repository, you may prefer this option.

The two install methods are not mutually exclusive.
With some care, it is possible to use both.

The configure option is:
.nf
.in 2m
--enable-alternate-install
.in
.fi

Following the usual 'make', it requires

.nf
.in 2m
$ make install-alternate
.in
.fi

This just copies the executables to the top game directory.
The effect of using any other 'install' make target is "undefined".


\n+[topic]. Getting Alien Arena from SVN

The repository has the latest development version of Alien Arena.
It contains tools and other resources that are not a part of the regular distribution.

The SVN repository may be browsed at:

http://svn.icculus.org/alienarena/trunk/

Anonymous read-only checkout is available using this command:

svn co svn://svn.icculus.org/alienarena/trunk alienarena

More information about Subversion may be found at:
http://subversion.apache.org/


